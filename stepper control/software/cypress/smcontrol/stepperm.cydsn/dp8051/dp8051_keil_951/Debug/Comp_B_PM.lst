C51 COMPILER V9.51   COMP_B_PM                                                             05/22/2017 14:27:59 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE COMP_B_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Comp_B_PM.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\Comp_B_PM.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(
                    -.\DP8051\DP8051_Keil_951\Debug/Comp_B_PM.lst) OT(5) OJ(.\DP8051\DP8051_Keil_951\Debug\Comp_B_PM.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: Comp_B.c
   3          * Version 2.0
   4          *
   5          * Description:
   6          *  This file provides the power management source code APIs for the
   7          *  Comparator.
   8          *
   9          * Note:
  10          *  None
  11          *
  12          ********************************************************************************
  13          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          *******************************************************************************/
  18          
  19          #include "Comp_B.h"
  20          
  21          static Comp_B_backupStruct Comp_B_backup;
  22          
  23          
  24          /*******************************************************************************
  25          * Function Name: Comp_B_SaveConfig
  26          ********************************************************************************
  27          *
  28          * Summary:
  29          *  Save the current user configuration
  30          *
  31          * Parameters:
  32          *  void:
  33          *
  34          * Return:
  35          *  void
  36          *
  37          *******************************************************************************/
  38          void Comp_B_SaveConfig(void) 
  39          {
  40   1          /* Empty since all are system reset for retention flops */
  41   1      }
  42          
  43          
  44          /*******************************************************************************
  45          * Function Name: Comp_B_RestoreConfig
  46          ********************************************************************************
  47          *
  48          * Summary:
  49          *  Restores the current user configuration.
  50          *
  51          * Parameters:
  52          *  void
  53          *
C51 COMPILER V9.51   COMP_B_PM                                                             05/22/2017 14:27:59 PAGE 2   

  54          * Return:
  55          *  void
  56          *
  57          ********************************************************************************/
  58          void Comp_B_RestoreConfig(void) 
  59          {
  60   1          /* Empty since all are system reset for retention flops */    
  61   1      }
  62          
  63          
  64          /*******************************************************************************
  65          * Function Name: Comp_B_Sleep
  66          ********************************************************************************
  67          *
  68          * Summary:
  69          *  Stop and Save the user configuration
  70          *
  71          * Parameters:
  72          *  void:
  73          *
  74          * Return:
  75          *  void
  76          *
  77          * Global variables:
  78          *  Comp_B_backup.enableState:  Is modified depending on the enable 
  79          *   state of the block before entering sleep mode.
  80          *
  81          *******************************************************************************/
  82          void Comp_B_Sleep(void) 
  83          {
  84   1          /* Save Comp's enable state */    
  85   1          if(Comp_B_ACT_PWR_EN == (Comp_B_PWRMGR & Comp_B_ACT_PWR_EN))
  86   1          {
  87   2              /* Comp is enabled */
  88   2              Comp_B_backup.enableState = 1u;
  89   2          }
  90   1          else
  91   1          {
  92   2              /* Comp is disabled */
  93   2              Comp_B_backup.enableState = 0u;
  94   2          }    
  95   1          
  96   1          Comp_B_Stop();
  97   1          Comp_B_SaveConfig();
  98   1      }
  99          
 100          
 101          /*******************************************************************************
 102          * Function Name: Comp_B_Wakeup
 103          ********************************************************************************
 104          *
 105          * Summary:
 106          *  Restores and enables the user configuration
 107          *  
 108          * Parameters:
 109          *  void
 110          *
 111          * Return:
 112          *  void
 113          *
 114          * Global variables:
 115          *  Comp_B_backup.enableState:  Is used to restore the enable state of 
C51 COMPILER V9.51   COMP_B_PM                                                             05/22/2017 14:27:59 PAGE 3   

 116          *  block on wakeup from sleep mode.
 117          *
 118          *******************************************************************************/
 119          void Comp_B_Wakeup(void) 
 120          {
 121   1          Comp_B_RestoreConfig();
 122   1          
 123   1          if(Comp_B_backup.enableState == 1u)
 124   1          {
 125   2              /* Enable Comp's operation */
 126   2              Comp_B_Enable();
 127   2      
 128   2          } /* Do nothing if Comp was disabled before */ 
 129   1      }
 130          
 131          
 132          /* [] END OF FILE */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     45    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
