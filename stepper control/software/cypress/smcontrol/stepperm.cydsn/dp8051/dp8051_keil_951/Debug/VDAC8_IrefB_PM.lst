C51 COMPILER V9.51   VDAC8_IREFB_PM                                                        05/22/2017 14:28:06 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE VDAC8_IREFB_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\VDAC8_IrefB_PM.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\VDAC8_IrefB_PM.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2
                    -) PR(.\DP8051\DP8051_Keil_951\Debug/VDAC8_IrefB_PM.lst) OT(5) OJ(.\DP8051\DP8051_Keil_951\Debug\VDAC8_IrefB_PM.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: VDAC8_IrefB_PM.c  
   3          * Version 1.90
   4          *
   5          * Description:
   6          *  This file provides the power management source code to API for the
   7          *  VDAC8.  
   8          *
   9          * Note:
  10          *  None
  11          *
  12          ********************************************************************************
  13          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions, 
  15          * disclaimers, and limitations in the end user license agreement accompanying 
  16          * the software package with which this file was provided.
  17          *******************************************************************************/
  18          
  19          #include "VDAC8_IrefB.h"
  20          
  21          static VDAC8_IrefB_backupStruct VDAC8_IrefB_backup;
  22          
  23          
  24          /*******************************************************************************
  25          * Function Name: VDAC8_IrefB_SaveConfig
  26          ********************************************************************************
  27          * Summary:
  28          *  Save the current user configuration
  29          *
  30          * Parameters:  
  31          *  void  
  32          *
  33          * Return: 
  34          *  void
  35          *
  36          *******************************************************************************/
  37          void VDAC8_IrefB_SaveConfig(void) 
  38          {
  39   1          if (!((VDAC8_IrefB_CR1 & VDAC8_IrefB_SRC_MASK) == VDAC8_IrefB_SRC_UDB))
  40   1          {
  41   2              VDAC8_IrefB_backup.data_value = VDAC8_IrefB_Data;
  42   2          }
  43   1      }
  44          
  45          
  46          /*******************************************************************************
  47          * Function Name: VDAC8_IrefB_RestoreConfig
  48          ********************************************************************************
  49          *
  50          * Summary:
  51          *  Restores the current user configuration.
  52          *
  53          * Parameters:  
C51 COMPILER V9.51   VDAC8_IREFB_PM                                                        05/22/2017 14:28:06 PAGE 2   

  54          *  void
  55          *
  56          * Return: 
  57          *  void
  58          *
  59          *******************************************************************************/
  60          void VDAC8_IrefB_RestoreConfig(void) 
  61          {
  62   1          if (!((VDAC8_IrefB_CR1 & VDAC8_IrefB_SRC_MASK) == VDAC8_IrefB_SRC_UDB))
  63   1          {
  64   2              if((VDAC8_IrefB_Strobe & VDAC8_IrefB_STRB_MASK) == VDAC8_IrefB_STRB_EN)
  65   2              {
  66   3                  VDAC8_IrefB_Strobe &= (uint8)(~VDAC8_IrefB_STRB_MASK);
  67   3                  VDAC8_IrefB_Data = VDAC8_IrefB_backup.data_value;
  68   3                  VDAC8_IrefB_Strobe |= VDAC8_IrefB_STRB_EN;
  69   3              }
  70   2              else
  71   2              {
  72   3                  VDAC8_IrefB_Data = VDAC8_IrefB_backup.data_value;
  73   3              }
  74   2          }
  75   1      }
  76          
  77          
  78          /*******************************************************************************
  79          * Function Name: VDAC8_IrefB_Sleep
  80          ********************************************************************************
  81          * Summary:
  82          *  Stop and Save the user configuration
  83          *
  84          * Parameters:  
  85          *  void:  
  86          *
  87          * Return: 
  88          *  void
  89          *
  90          * Global variables:
  91          *  VDAC8_IrefB_backup.enableState:  Is modified depending on the enable 
  92          *  state  of the block before entering sleep mode.
  93          *
  94          *******************************************************************************/
  95          void VDAC8_IrefB_Sleep(void) 
  96          {
  97   1          /* Save VDAC8's enable state */    
  98   1          if(VDAC8_IrefB_ACT_PWR_EN == (VDAC8_IrefB_PWRMGR & VDAC8_IrefB_ACT_PWR_EN))
  99   1          {
 100   2              /* VDAC8 is enabled */
 101   2              VDAC8_IrefB_backup.enableState = 1u;
 102   2          }
 103   1          else
 104   1          {
 105   2              /* VDAC8 is disabled */
 106   2              VDAC8_IrefB_backup.enableState = 0u;
 107   2          }
 108   1          
 109   1          VDAC8_IrefB_Stop();
 110   1          VDAC8_IrefB_SaveConfig();
 111   1      }
 112          
 113          
 114          /*******************************************************************************
 115          * Function Name: VDAC8_IrefB_Wakeup
C51 COMPILER V9.51   VDAC8_IREFB_PM                                                        05/22/2017 14:28:06 PAGE 3   

 116          ********************************************************************************
 117          *
 118          * Summary:
 119          *  Restores and enables the user configuration
 120          *  
 121          * Parameters:  
 122          *  void
 123          *
 124          * Return: 
 125          *  void
 126          *
 127          * Global variables:
 128          *  VDAC8_IrefB_backup.enableState:  Is used to restore the enable state of 
 129          *  block on wakeup from sleep mode.
 130          *
 131          *******************************************************************************/
 132          void VDAC8_IrefB_Wakeup(void) 
 133          {
 134   1          VDAC8_IrefB_RestoreConfig();
 135   1          
 136   1          if(VDAC8_IrefB_backup.enableState == 1u)
 137   1          {
 138   2              /* Enable VDAC8's operation */
 139   2              VDAC8_IrefB_Enable();
 140   2      
 141   2              /* Restore the data register */
 142   2              VDAC8_IrefB_SetValue(VDAC8_IrefB_Data);
 143   2          } /* Do nothing if VDAC8 was disabled before */    
 144   1      }
 145          
 146          
 147          /* [] END OF FILE */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    131    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
